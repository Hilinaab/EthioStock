"""
Django settings for EthioStock project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta
from graphene_file_upload.scalars import Upload

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'srlztc2pq0@4n#na7b^qothpbgt2)bp9*$v8##702rqkx)5q0j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


GRAPHENE = {
    # 'SUBSCRIPTION_PATH': '/graphql/' ,
    'SCHEMA':  'EthioStock.schema.schema', # Where the Graphene schema lives
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}
GRAPHQL_AUTH = {
    'LOGIN_ALLOWED_FIELDS': ['email', 'username'],
    'REGISTER_MUTATION_FIELDS' : {
        "email": "String",
        "username": "String",
        "user_type":"String",
        "phone_no":"String",
        "subcity":"String",
        "woreda":"Int",
        "address":"String",
        "sex":"String",
        "first_name":"String",
        "middle_name":"String",
        "last_name":"String",


    },
    'REGISTER_MUTATION_FIELDS_OPTIONAL':{
        "account_linked":"Boolean"
    },
    'ALLOW_LOGIN_NOT_VERIFIED':False,
    # 'EMAIL_FROM':getattr('django_settings', "DEFAULT_FROM_EMAIL", "ethiostock3@gmail.com")
}

GRAPHQL_JWT = {
    'JWT_VERIFY_EXPIRATION': True,
    # 'JWT_EXPIRATION_DELTA': timedelta(minutes=5),
    # 'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7),
    # "JWT_LONG_RUNNING_REFRESH_TOKEN": True,
    "JWT_ALLOW_ANY_CLASSES": [
        "graphql_auth.mutations.Register",
        "graphql_auth.mutations.VerifyAccount",
        "graphql_auth.mutations.ResendActivationEmail",
        "graphql_auth.mutations.SendPasswordResetEmail",
        "graphql_auth.mutations.PasswordReset",
        "graphql_auth.mutations.ObtainJSONWebToken",
        "graphql_auth.mutations.VerifyToken",
        # "graphql_auth.mutations.RefreshToken",
        # "graphql_auth.mutations.RevokeToken",
    ],
}
AUTHENTICATION_BACKENDS = [
    # 'graphql_jwt.backends.JSONWebTokenBackend',
    'django.contrib.auth.backends.ModelBackend',
    'graphql_auth.backends.GraphQLAuthBackend',
]

AUTH_USER_MODEL = 'account.Account'


# Application definition

INSTALLED_APPS = [
    'account',
    'businessowner',
    'admina',
    'comment',
    'follower',
    'investor',
    'post',
    'prediction',
    'reaction',
    'soldstock',
    'stock',
    'userreport',  
    'watchlist', 
    'graphene_django',
    'graphql_auth',
    'channels',
    'django_filters',
    'graphene_subscriptions',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:3000'
# )
ROOT_URLCONF = 'EthioStock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EthioStock.wsgi.application'
ASGI_APPLICATION = "EthioStock.routing.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ethiostock',
        'USER':'postgres',
        'PASSWORD':'tsiyon',
        'HOST':'localhost',
        'PORT':5432
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
CHANNEL_LAYERS = {
    "default": {
         "BACKEND": "channels.layers.InMemoryChannelLayer"
        # "BACKEND": "channels_redis.core.RedisChannelLayer",
        # "CONFIG": {
        #     "hosts": [("127.0.0.1", 6379)],
        # },
    },
}
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/userImages/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'userImages/')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)